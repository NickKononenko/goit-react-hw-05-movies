{"version":3,"file":"static/js/38.e7bbb2ab.chunk.js","mappings":"yPAEaA,EAAmBC,EAAAA,EAAAA,IAAH,wDAKhBC,EAAYD,EAAAA,EAAAA,IAAH,0CAITE,EAAWF,EAAAA,EAAAA,GAAH,wD,SCuDrB,EA7DqB,WAAO,IAAD,IACzB,GAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,GAASM,MAAK,SAAAC,GAC3BR,EAAaQ,EACd,GACF,GAAE,CAACP,IAEJ,IAAMQ,GAAWC,EAAAA,EAAAA,QAAOP,EAASQ,MAAMC,MAEvC,OACE,UAAChB,EAAD,YACE,SAAC,KAAD,CAAMiB,GAAIJ,EAASK,QAAnB,sBACA,UAACpB,EAAD,YACE,gBACEqB,IACEhB,EAAUiB,aAAV,0CACmCjB,EAAUiB,aAE/CC,IAAI,iBAEN,4BACE,+BAAKlB,QAAL,IAAKA,OAAL,EAAKA,EAAWmB,kBAChB,kDAAgBnB,EAAUoB,oBAA1B,aAAgB,EAAwBC,QAAQ,OAChD,2BACE,2BACE,sCACA,8BAAIrB,QAAJ,IAAIA,OAAJ,EAAIA,EAAWsB,eAEjB,2BACE,oCACA,kCACGtB,EAAUuB,cADb,aACG,EAAkBC,KAAI,SAAAC,GACrB,OAAO,+BAAqBA,QAArB,IAAqBA,OAArB,EAAqBA,EAAOC,MAA5B,OAASD,QAAT,IAASA,OAAT,EAASA,EAAOE,GACxB,mBAMX,UAAC7B,EAAD,YACE,yBACE,SAAC,KAAD,CAAMgB,GAAG,OAAOF,MAAO,CAAEC,KAAMT,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMU,GAAG,UAAUF,MAAO,CAAEC,KAAMT,GAAlC,2BAKJ,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/movie.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n`;\n\nexport const Container = styled.div`\n  padding: 2rem;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 2rem;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchEachMovie } from '../../api/data';\nimport { DetailsContainer, Container, LinkList } from './movie.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchEachMovie(movieId).then(response => {\n      setMovieInfo(response);\n    });\n  }, [movieId]);\n\n  const prevPath = useRef(location.state.from);\n\n  return (\n    <Container>\n      <Link to={prevPath.current}>Go back</Link>\n      <DetailsContainer>\n        <img\n          src={\n            movieInfo.poster_path &&\n            `https://image.tmdb.org/t/p/w300/${movieInfo.poster_path}`\n          }\n          alt=\"Film poster\"\n        />\n        <div>\n          <h2>{movieInfo?.original_title}</h2>\n          <p>User score: {movieInfo.vote_average?.toFixed(1)}</p>\n          <ul>\n            <li>\n              <h3>Overview</h3>\n              <p>{movieInfo?.overview}</p>\n            </li>\n            <li>\n              <h3>Genres</h3>\n              <ul>\n                {movieInfo.genres?.map(genre => {\n                  return <li key={genre?.id}>{genre?.name}</li>;\n                })}\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </DetailsContainer>\n      <LinkList>\n        <li>\n          <Link to=\"cast\" state={{ from: location }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </Link>\n        </li>\n      </LinkList>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["DetailsContainer","styled","Container","LinkList","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","useEffect","fetchEachMovie","then","response","prevPath","useRef","state","from","to","current","src","poster_path","alt","original_title","vote_average","toFixed","overview","genres","map","genre","name","id"],"sourceRoot":""}