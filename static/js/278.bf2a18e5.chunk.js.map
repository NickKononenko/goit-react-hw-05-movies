{"version":3,"file":"static/js/278.bf2a18e5.chunk.js","mappings":"sMAyEA,UArEe,WAAO,IAAD,MACnB,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,YAApB,QAA4B,IAQ5CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAyBH,GAAYI,MAAK,SAAAC,GACxCX,EAAQW,EACT,GACF,GAAE,CAACL,IAaJ,OACE,iCACE,kBAAMM,SAPW,SAAAC,GACnBA,EAAEC,kBAlBFL,EAAAA,EAAAA,IAAyBZ,GAAYa,MAAK,SAAAC,GACxCX,EAAQW,EACT,GAkBF,EAIG,WACE,4BACE,kBACEI,KAAK,OACLC,KAAK,SACLC,SAlBgB,SAAAJ,GACxBf,EAAce,EAAEK,OAAOC,OACvB,IAAMC,EAAgC,KAAnBP,EAAEK,OAAOC,MAAe,CAAEE,EAAGR,EAAEK,OAAOC,OAAU,CAAC,EACpEd,EAAgBe,EACjB,EAeSD,MAAOb,EACPgB,UAAQ,OAGZ,mBAAQP,KAAK,SAAb,wBAEF,0BACE,wBAC4B,KAAzB,UAAAhB,EAAKwB,eAAL,eAAcC,SACb,8CADD,UAGCzB,EAAKwB,eAHN,aAGC,EAAcE,KAAI,SAAAC,GAChB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAME,IACbA,GAAIF,EAAME,GACVC,MAAO,CAAEC,KAAM7B,GAHjB,SAKGyB,EAAMK,SANFL,EAAME,GAUlB,UAMZ,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchMoviesBySearchQuery } from 'api/data';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchData, setSearchData] = useState('');\n  const [data, setData] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('q') ?? '';\n\n  const updateData = () => {\n    fetchMoviesBySearchQuery(searchData).then(response => {\n      setData(response);\n    });\n  };\n\n  useEffect(() => {\n    fetchMoviesBySearchQuery(movieQuery).then(response => {\n      setData(response);\n    });\n  }, [movieQuery]);\n\n  const handleInputChange = e => {\n    setSearchData(e.target.value);\n    const nextParams = e.target.value !== '' ? { q: e.target.value } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateData();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            onChange={handleInputChange}\n            value={movieQuery}\n            required\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        <ul>\n          {data.results?.length === 0 ? (\n            <p>{`There is no movies`}</p>\n          ) : (\n            data.results?.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link\n                    to={`${movie.id}`}\n                    id={movie.id}\n                    state={{ from: location }}\n                  >\n                    {movie.title}\n                  </Link>\n                </li>\n              );\n            })\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchData","setSearchData","data","setData","location","useLocation","useSearchParams","searchParams","setSearchParams","movieQuery","get","useEffect","fetchMoviesBySearchQuery","then","response","onSubmit","e","preventDefault","type","name","onChange","target","value","nextParams","q","required","results","length","map","movie","to","id","state","from","title"],"sourceRoot":""}